import 'dart:convert';
import 'package:arsys/authentication/authentication_manager.dart';
import 'package:arsys/views/appbar.dart';
import 'package:flutter/material.dart';
import 'package:flutter/cupertino.dart';
import 'package:arsys/network/api.dart';
import 'package:arsys/views/faculty/home.dart';
import 'package:get/get.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:url_launcher/url_launcher.dart';

class Login extends StatefulWidget {
  @override
  _LoginState createState() => _LoginState();
}

class _LoginState extends State<Login> {
  final authC = Get.find<AuthController>();
  final _formKey = GlobalKey<FormState>();
  var email;
  var password;
  final _scaffoldKey = GlobalKey<ScaffoldState>();

  @override
  Widget build(BuildContext context) {
    // Build a Form widget using the _formKey created above.
    return Scaffold(
      resizeToAvoidBottomInset: false,
      key: _scaffoldKey,
      body: Container(
        decoration: BoxDecoration(
            image: DecorationImage(
                image: AssetImage("assets/arches.png"),
                scale: 1.5,
                fit: BoxFit.none,
                repeat: ImageRepeat.repeat),
            gradient: LinearGradient(
                colors: [Colors.lightBlue, Colors.lightBlueAccent[100]!],
                begin: FractionalOffset.bottomLeft,
                end: FractionalOffset.topRight)),
        child: Stack(
          alignment: AlignmentDirectional.center,
          children: <Widget>[
            Positioned(
              top: MediaQuery.of(context).viewInsets.top +
                  (MediaQuery.of(context).size.height * 0.10),
              child: Container(
                margin: EdgeInsets.only(bottom: 0),
                child: Column(
                  children: [
                    Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text(
                          "Ar",
                          style: TextStyle(
                            fontFamily: "Helvetica",
                            fontWeight: FontWeight.bold,
                            fontSize: 80,
                            color: Color(0xFFFFFFFF),
                          ),
                        ),
                        Text(
                          "Sys",
                          style: TextStyle(
                            fontFamily: "Helvetica",
                            fontSize: 80,
                            fontStyle: FontStyle.italic,
                            color: Color(0xFFFFFFFF),
                          ),
                        ),
                      ],
                    ),
                    Text(
                      "Advanced Research Support System",
                      style: TextStyle(
                        fontFamily: "Helvetica",
                        fontSize: 20,
                        color: Color(0xFFFFFFFF),
                      ),
                    ),
                  ],
                ),
              ),
            ),
            Positioned(
              bottom: MediaQuery.of(context).viewInsets.bottom + 50,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  SizedBox(
                    height: 220,
                    width: MediaQuery.of(context).size.width,
                    child: Card(
                      elevation: 4.0,
                      color: Colors.white,
                      margin: EdgeInsets.only(left: 20, right: 20),
                      shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(15)),
                      child: Padding(
                        padding: const EdgeInsets.all(10.0),
                        child: Form(
                          key: _formKey,
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: <Widget>[
                              TextFormField(
                                style: TextStyle(color: Color(0xFF000000)),
                                cursorColor: Color(0xFF9b9b9b),
                                keyboardType: TextInputType.text,
                                decoration: InputDecoration(
                                  prefixIcon: Icon(
                                    Icons.email,
                                    color: Colors.grey,
                                  ),
                                  hintText: "Email",
                                  hintStyle: TextStyle(
                                      color: Color(0xFF9b9b9b),
                                      fontSize: 15,
                                      fontWeight: FontWeight.normal),
                                ),
                                validator: (emailValue) {
                                  if (emailValue!.isEmpty) {
                                    return 'Please enter email';
                                  }
                                  email = emailValue;
                                  return null;
                                },
                              ),
                              TextFormField(
                                style: TextStyle(color: Color(0xFF000000)),
                                cursorColor: Color(0xFF9b9b9b),
                                keyboardType: TextInputType.text,
                                obscureText: true,
                                decoration: InputDecoration(
                                  prefixIcon: Icon(
                                    Icons.vpn_key,
                                    color: Colors.grey,
                                  ),
                                  hintText: "Password",
                                  hintStyle: TextStyle(
                                      color: Color(0xFF9b9b9b),
                                      fontSize: 15,
                                      fontWeight: FontWeight.normal),
                                ),
                                validator: (passwordValue) {
                                  if (passwordValue!.isEmpty) {
                                    return 'Please enter password';
                                  }
                                  password = passwordValue;
                                  return null;
                                },
                              ),
                              Padding(
                                padding: const EdgeInsets.only(
                                    left: 0, top: 10.0, right: 0),
                                child: ElevatedButton(
                                  onPressed: () {
                                    if (_formKey.currentState!.validate()) {
                                      authC.login(email, password);
                                    }
                                  },
                                  style: ButtonStyle(
                                    minimumSize: MaterialStateProperty.all(Size(
                                        MediaQuery.of(context).size.width * 0.8,
                                        40)),
                                    shape: MaterialStateProperty.all(
                                        RoundedRectangleBorder(
                                            borderRadius:
                                                BorderRadius.circular(50),
                                            side: BorderSide(
                                                width: 1.5,
                                                color: Colors.transparent))),
                                    backgroundColor: MaterialStateProperty.all(
                                        Colors.lightBlueAccent[600]),
                                    shadowColor: MaterialStateProperty.all(
                                        Colors.transparent),
                                  ),
                                  child: Obx(() => Text(
                                        authC.isLoading.value
                                            ? 'Proccessing...'
                                            : 'Login',
                                        style: TextStyle(
                                            color: Colors.white, fontSize: 16),
                                      )),
                                ),
                              ),
                              Padding(
                                padding: const EdgeInsets.fromLTRB(0, 10, 0, 0),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  children: [
                                    Text(
                                      "For use ArSys Mobile, please do mobile activation ",
                                      style: TextStyle(
                                          color: Color(0xff3A4856),
                                          fontFamily: "OpenSans"),
                                    ),
                                    InkWell(
                                        onTap: () async {
                                          await openURL(
                                              'http://ee.upi.edu/arsys/arsys/user/mobile-activation');
                                        },
                                        child: Text("here",
                                            style: TextStyle(
                                                color: Colors.lightBlueAccent,
                                                fontFamily: "OpenSans",
                                                fontWeight: FontWeight.bold)))
                                  ],
                                ),
                              ),
                            ],
                          ),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  // void _login() async {
  //   setState(() {
  //     _isLoading = true;
  //   });
  //   var data = {'email': email, 'password': password};

  //   var res = await Network().authData(data, '/login');
  //   var body = json.decode(res.body);

  //   if (body['success']) {
  //     SharedPreferences localStorage = await SharedPreferences.getInstance();
  //     localStorage.setString('token', json.encode(body['token']));
  //     localStorage.setString('user', json.encode(body['user']));
  //     localStorage.setString('roles', json.decode(json.encode(body['roles'])));

  //     if (body['roles'] == 'student') {
  //       Get.offAndToNamed('/student-home');
  //     } else if (body['roles'] == 'faculty') {
  //       Get.offAndToNamed('/faculty-home');
  //     }
  //   } else {
  //     _showMsg(body['message']);
  //   }

  //   setState(() {
  //     _isLoading = false;
  //   });
  // }
}

Future<void> openURL(String url,
    {bool forceWebView = false, bool enableJavaScript = true}) async {
  await launch(url,
      forceWebView: forceWebView, enableJavaScript: enableJavaScript);
}
